name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        llvm-version: ['21']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install LLVM (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt update
        sudo apt install -y llvm-21 llvm-21-dev libllvm21

    - name: Install LLVM (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install llvm@21

    - name: Set LLVM environment variables (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        echo "LLVM_LIB_DIR=/usr/lib/llvm-21/lib" >> $GITHUB_ENV

    - name: Set LLVM environment variables (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        echo "LLVM_LIB_DIR=$(brew --prefix llvm@21)/lib" >> $GITHUB_ENV

    - name: Debug - Show LLVM directory structure
      run: |
        echo "=== LLVM_LIB_DIR environment variable ==="
        echo "LLVM_LIB_DIR=$LLVM_LIB_DIR"
        echo ""
        echo "=== Files under LLVM lib directory ==="
        ls -la $LLVM_LIB_DIR/

    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install

    - name: Run dummy FFI tests
      run: bun test/dummy.ts

    - name: Run tests
      run: bun test

    - name: Run tests with coverage
      run: bun test --coverage

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install

    - name: Run Biome check (linting, formatting, and type checking)
      run: bunx biome ci

    - name: Run TypeScript type check
      run: bunx tsc --noEmit
